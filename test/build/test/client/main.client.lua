-- Compiled with roblox-ts v1.2.7
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("TS"):WaitForChild("RuntimeLib"))
local Flamework = TS.import(script, TS.getModule(script, "@flamework", "core").out).Flamework
local connectClient = TS.import(script, game:GetService("ReplicatedStorage"), "TS", "node_modules", "flamework-gateways-mod").connectClient
local bootstrap = TS.async(function()
	local client = TS.await(connectClient())
	Flamework._addPaths({ "StarterPlayer", "StarterPlayerScripts", "Client", "gateways" })
	Flamework.ignite()
	print("\nRequesting meaning of life")
	local result1 = TS.await(client.getMeaningOfLife("test"))
	local result2 = TS.await(client:request("getMeaningOfLife", "test"))
	print("-> It's " .. tostring(result1) .. " and " .. tostring(result2))
	print("\nListening to jump height")
	client.performJump(function(height)
		print("-> (index) Jump height: " .. tostring(height))
	end)
	client:on("performJump", function(height)
		print("-> (on) Jump height: " .. tostring(height))
	end)
	local _exp = client:wait("performJump")
	local _arg0 = function(_param)
		local height = _param[1]
		print("-> (wait) Jump height: " .. tostring(height))
	end
	_exp:andThen(_arg0)
	task.wait(0.5)
	print("\nSending message to gateway")
	client.onTest("-> Hello from the client!")
end)
bootstrap():catch(function(err)
	return warn(err)
end)
